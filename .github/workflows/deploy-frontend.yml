name: Deploy New App Version (Frontend)

on:
  push:
    branches:
    - main
    paths:
    - 'DevDoListBlazorApp/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-dev-do-list-build
          aws-region: eu-west-1

      - name: Setup dotnet cli
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.x

      - name: Dotnet publish
        run: |
          dotnet restore;
          dotnet publish -r linux-x64 --configuration "Release" --self-contained "true" -o site;
        working-directory: DevDoListBlazorApp

      - name: Package artifact
        run: |
          cd site;
          zip site.zip *;
        working-directory: DevDoListBlazorApp

      - name: Upload artifact to S3
        run: aws s3 cp dist.zip s3://${{ secrets.BUCKET_NAME }}/frontend-${{ github.run_id }}.zip
        working-directory: DevDoListBlazorApp

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-dev-do-list-build
          aws-region: eu-west-1

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name ${{ secrets.FRONTEND_APP_NAME }} --version-label ${{ github.run_id }} --source-bundle S3Bucket="${{ secrets.BUCKET_NAME }}",S3Key="frontend-${{ github.run_id }}.zip"
          aws elasticbeanstalk update-environment --application-name ${{ secrets.FRONTEND_APP_NAME }} --environment-name ${{ secrets.FRONTEND_ENV_NAME }} --version-label ${{ github.run_id }}
